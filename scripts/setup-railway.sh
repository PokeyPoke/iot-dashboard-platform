#!/bin/bash

echo "üöÄ Railway IoT Dashboard Setup Script"
echo "======================================"

# Check if railway CLI is installed and logged in
if ! command -v railway &> /dev/null; then
    echo "‚ùå Railway CLI not found. Please install it first:"
    echo "   npm install -g @railway/cli"
    exit 1
fi

# Check if logged in
if ! railway whoami &> /dev/null; then
    echo "‚ùå Not logged in to Railway. Please run: railway login"
    exit 1
fi

echo "‚úÖ Railway CLI is ready"

# Get current project info
echo ""
echo "üìä Current Project Status:"
railway status

echo ""
echo "üîß Required Services:"
echo "1. PostgreSQL Database"
echo "2. Redis Cache (optional)"
echo "3. Web Application (already exists)"

echo ""
echo "‚ö° Required Environment Variables:"
echo "- DATABASE_URL (will be auto-generated by PostgreSQL service)"
echo "- JWT_SECRET"
echo "- JWT_REFRESH_SECRET"
echo "- ADMIN_EMAIL"
echo "- ADMIN_PASSWORD"

echo ""
echo "üìù To complete setup:"
echo "1. Go to: https://railway.com/project/50e639cb-4818-4eac-9740-0a83ee764f0c"
echo "2. Click 'New Service' ‚Üí 'Database' ‚Üí 'Add PostgreSQL'"
echo "3. Click 'New Service' ‚Üí 'Database' ‚Üí 'Add Redis' (optional)"
echo "4. Click on your web service ‚Üí Variables tab"
echo "5. Add the environment variables listed above"
echo "6. Redeploy your web service"

echo ""
echo "üîë Suggested Environment Variables:"
echo "DATABASE_URL=<auto-generated-by-postgresql-service>"
echo "JWT_SECRET=$(openssl rand -base64 32)"
echo "JWT_REFRESH_SECRET=$(openssl rand -base64 32)"
echo "ADMIN_EMAIL=admin@example.com"
echo "ADMIN_PASSWORD=admin123"
echo "NODE_ENV=production"

echo ""
echo "‚úÖ Once complete, your app will be fully functional!"